public class com.google.protobuf.CodedOutputStream$ArrayEncoder extends com.google.protobuf.CodedOutputStream
{
    public final byte[] buffer;
    public final int limit;
    public final int offset;
    public int position;

    public void <init>(byte[], int, int)
    {
        byte[] $r1;
        java.lang.Object[] $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.Integer $r4;
        java.lang.NullPointerException $r6;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.google.protobuf.CodedOutputStream: void <init>(com.google.protobuf.CodedOutputStream$1)>(null);

        if $r1 == null goto label2;

        $i2 = $i1 | $i0;

        $i3 = lengthof $r1;

        $i4 = $i1 + $i0;

        $i3 = $i3 - $i4;

        $i2 = $i2 | $i3;

        if $i2 < 0 goto label1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer> = $r1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int offset> = $i1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit> = $i4;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[3];

        $i4 = lengthof $r1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Array range is invalid. Buffer.length=%d, offset=%d, length=%d", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label2:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("buffer");

        throw $r6;
    }

    public void flush()
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        return;
    }

    public final int getTotalBytesWritten()
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int offset>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public final int spaceLeft()
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public final void write(byte)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte $b0;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r3;
        int $i1, $i2;
        java.lang.String $r6;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $b0 := @parameter0: byte;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

     label1:
        $r1[$i1] = $b0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r4 = newarray (java.lang.Object)[3];

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[0] = $r5;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[1] = $r5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r4);

        specialinvoke $r3.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r2);

        throw $r3;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public final void write(java.nio.ByteBuffer)
    {
        byte[] $r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.nio.ByteBuffer $r1;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r4;
        int $i0, $i1;
        java.lang.String $r7;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        $r2 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label1:
        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r2, $i1, $i0);

     label2:
        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i1 = $i1 + $i0;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r5 = newarray (java.lang.Object)[3];

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[0] = $r6;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[1] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r5);

        specialinvoke $r4.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r3);

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public final void write(byte[], int, int)
    {
        byte[] $r1, $r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r4;
        int $i0, $i1, $i2;
        java.lang.String $r7;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i2 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label1:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i2, $i1);

     label2:
        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i0 = $i0 + $i1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i0;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r5 = newarray (java.lang.Object)[3];

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r5);

        specialinvoke $r4.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r3);

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public final void writeBool(int, boolean)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte $b1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 0);

        $b1 = (byte) $z0;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte)>($b1);

        return;
    }

    public final void writeByteArray(int, byte[])
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 = lengthof $r1;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeByteArray(int,byte[],int,int)>($i0, $r1, 0, $i1);

        return;
    }

    public final void writeByteArray(int, byte[], int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeByteArrayNoTag(byte[],int,int)>($r1, $i1, $i2);

        return;
    }

    public final void writeByteArrayNoTag(byte[], int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public final void writeByteBuffer(int, java.nio.ByteBuffer)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.nio.ByteBuffer;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeRawBytes(java.nio.ByteBuffer)>($r1);

        return;
    }

    public final void writeBytes(int, com.google.protobuf.ByteString)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        com.google.protobuf.ByteString $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.ByteString;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeBytesNoTag(com.google.protobuf.ByteString)>($r1);

        return;
    }

    public final void writeBytesNoTag(com.google.protobuf.ByteString)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        com.google.protobuf.ByteString $r1;
        int $i0;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: com.google.protobuf.ByteString;

        $i0 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        virtualinvoke $r1.<com.google.protobuf.ByteString: void writeTo(com.google.protobuf.ByteOutput)>(r0);

        return;
    }

    public final void writeFixed32(int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 5);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed32NoTag(int)>($i1);

        return;
    }

    public final void writeFixed32NoTag(int)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte $b3;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r3;
        int $i0, $i1, $i2;
        java.lang.String $r6;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i2 = $i0 & 255;

        $b3 = (byte) $i2;

     label1:
        $r1[$i1] = $b3;

     label2:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i2 = $i0 >> 8;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label3:
        $r1[$i1] = $b3;

     label4:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i2 = $i0 >> 16;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label5:
        $r1[$i1] = $b3;

     label6:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        $b3 = (byte) $i0;

     label7:
        $r1[$i1] = $b3;

     label8:
        return;

     label9:
        $r2 := @caughtexception;

        $r3 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r4 = newarray (java.lang.Object)[3];

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[1] = $r5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r4);

        specialinvoke $r3.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r2);

        throw $r3;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label9;
        catch java.lang.IndexOutOfBoundsException from label3 to label4 with label9;
        catch java.lang.IndexOutOfBoundsException from label5 to label6 with label9;
        catch java.lang.IndexOutOfBoundsException from label7 to label8 with label9;
    }

    public final void writeFixed64(int, long)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        long $l1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed64NoTag(long)>($l1);

        return;
    }

    public final void writeFixed64NoTag(long)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r4;
        long $l0, $l4;
        java.lang.Integer $r5;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte $b3;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r3;
        int $i1, $i2;
        java.lang.String $r6;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $l0 := @parameter0: long;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i2 = (int) $l0;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label01:
        $r1[$i1] = $b3;

     label02:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l4 = $l0 >> 8;

        $i2 = (int) $l4;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label03:
        $r1[$i1] = $b3;

     label04:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l4 = $l0 >> 16;

        $i2 = (int) $l4;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label05:
        $r1[$i1] = $b3;

     label06:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l4 = $l0 >> 24;

        $i2 = (int) $l4;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label07:
        $r1[$i1] = $b3;

     label08:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l4 = $l0 >> 32;

        $i2 = (int) $l4;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label09:
        $r1[$i1] = $b3;

     label10:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l4 = $l0 >> 40;

        $i2 = (int) $l4;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label11:
        $r1[$i1] = $b3;

     label12:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l4 = $l0 >> 48;

        $i2 = (int) $l4;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label13:
        $r1[$i1] = $b3;

     label14:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l0 = $l0 >> 56;

        $i2 = (int) $l0;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

     label15:
        $r1[$i1] = $b3;

     label16:
        return;

     label17:
        $r2 := @caughtexception;

        $r3 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r4 = newarray (java.lang.Object)[3];

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[0] = $r5;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[1] = $r5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r4);

        specialinvoke $r3.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r2);

        throw $r3;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label17;
        catch java.lang.IndexOutOfBoundsException from label03 to label04 with label17;
        catch java.lang.IndexOutOfBoundsException from label05 to label06 with label17;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label17;
        catch java.lang.IndexOutOfBoundsException from label09 to label10 with label17;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label17;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label17;
        catch java.lang.IndexOutOfBoundsException from label15 to label16 with label17;
    }

    public final void writeInt32(int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeInt32NoTag(int)>($i1);

        return;
    }

    public final void writeInt32NoTag(int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        long $l1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        return;

     label1:
        $l1 = (long) $i0;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public final void writeLazy(java.nio.ByteBuffer)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(java.nio.ByteBuffer)>($r1);

        return;
    }

    public final void writeLazy(byte[], int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public final void writeMessage(int, com.google.protobuf.MessageLite)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        com.google.protobuf.MessageLite $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessageNoTag(com.google.protobuf.MessageLite)>($r1);

        return;
    }

    public final void writeMessage(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.CodedOutputStreamWriter $r4;
        com.google.protobuf.Schema $r2;
        int $i0;
        com.google.protobuf.AbstractMessageLite $r3;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        $r2 := @parameter2: com.google.protobuf.Schema;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        $r3 = (com.google.protobuf.AbstractMessageLite) $r1;

        $i0 = virtualinvoke $r3.<com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)>($r2);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        $r4 = r0.<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke $r2.<com.google.protobuf.Schema: void writeTo(java.lang.Object,com.google.protobuf.Writer)>($r1, $r4);

        return;
    }

    public final void writeMessageNoTag(com.google.protobuf.MessageLite)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        com.google.protobuf.MessageLite $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $i0 = interfaceinvoke $r1.<com.google.protobuf.MessageLite: int getSerializedSize()>();

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        interfaceinvoke $r1.<com.google.protobuf.MessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>(r0);

        return;
    }

    public final void writeMessageNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.CodedOutputStreamWriter $r4;
        com.google.protobuf.Schema $r2;
        int $i0;
        com.google.protobuf.AbstractMessageLite $r3;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 := @parameter1: com.google.protobuf.Schema;

        $r3 = (com.google.protobuf.AbstractMessageLite) $r1;

        $i0 = virtualinvoke $r3.<com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)>($r2);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        $r4 = r0.<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke $r2.<com.google.protobuf.Schema: void writeTo(java.lang.Object,com.google.protobuf.Writer)>($r1, $r4);

        return;
    }

    public final void writeMessageSetExtension(int, com.google.protobuf.MessageLite)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        com.google.protobuf.MessageLite $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)>(2, $i0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessage(int,com.google.protobuf.MessageLite)>(3, $r1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public final void writeRawBytes(java.nio.ByteBuffer)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] $r2;
        int $i0, $i1;
        java.nio.ByteBuffer $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>($r2, $i0, $i1);

        return;

     label1:
        $r1 = virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(java.nio.ByteBuffer)>($r1);

        return;
    }

    public final void writeRawMessageSetExtension(int, com.google.protobuf.ByteString)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        com.google.protobuf.ByteString $r1;
        int $i0;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.ByteString;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)>(2, $i0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeBytes(int,com.google.protobuf.ByteString)>(3, $r1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public final void writeString(int, java.lang.String)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeStringNoTag(java.lang.String)>($r1);

        return;
    }

    public final void writeStringNoTag(java.lang.String)
    {
        byte[] $r2;
        java.lang.IndexOutOfBoundsException $r3;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r5;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label01:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label02:
        $i1 = $i1 * 3;

     label03:
        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

     label04:
        if $i1 != $i2 goto label09;

        $i2 = $i0 + $i1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $r2 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i2 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label05:
        $i3 = virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        $i2 = staticinvoke <com.google.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>($r1, $r2, $i2, $i3);

     label06:
        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i0;

        $i3 = $i2 - $i0;

        $i1 = $i3 - $i1;

     label07:
        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

     label08:
        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        return;

     label09:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>($r1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

     label10:
        $r2 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label11:
        $i2 = virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        $i1 = staticinvoke <com.google.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>($r1, $r2, $i1, $i2);

     label12:
        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        return;

     label13:
        $r3 := @caughtexception;

        $r4 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r4.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label14:
        $r5 := @caughtexception;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i0;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void inefficientWriteStringNoTag(java.lang.String,com.google.protobuf.Utf8$UnpairedSurrogateException)>($r1, $r5);

        return;

        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label01 to label02 with label14;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label03 to label04 with label14;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label05 to label06 with label14;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label07 to label08 with label14;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label09 to label10 with label14;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label11 to label12 with label14;
        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label13;
        catch java.lang.IndexOutOfBoundsException from label03 to label04 with label13;
        catch java.lang.IndexOutOfBoundsException from label05 to label06 with label13;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label13;
        catch java.lang.IndexOutOfBoundsException from label09 to label10 with label13;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label13;
    }

    public final void writeTag(int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int makeTag(int,int)>($i1, $i0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

        return;
    }

    public final void writeUInt32(int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

        return;
    }

    public final void writeUInt32NoTag(int)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r3;
        long $l3;
        java.lang.Integer $r4;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte $b4;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r6;
        int $i0, $i1, $i2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $z0 = staticinvoke <com.google.protobuf.CodedOutputStream: boolean access$100()>();

        if $z0 == 0 goto label05;

        $z0 = staticinvoke <com.google.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 != 0 goto label05;

        $i1 = virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        if $i1 < 5 goto label05;

        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label01;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $b4 = (byte) $i0;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        return;

     label01:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $i1 = $i0 | 128;

        $b4 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        $i0 = $i0 >>> 7;

        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label02;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $b4 = (byte) $i0;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        return;

     label02:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $i1 = $i0 | 128;

        $b4 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        $i0 = $i0 >>> 7;

        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label03;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $b4 = (byte) $i0;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        return;

     label03:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $i1 = $i0 | 128;

        $b4 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        $i0 = $i0 >>> 7;

        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label04;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $b4 = (byte) $i0;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        return;

     label04:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $i1 = $i0 | 128;

        $b4 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        $i0 = $i0 >>> 7;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l3 = (long) $i1;

        $b4 = (byte) $i0;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        return;

     label05:
        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label08;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $b4 = (byte) $i0;

     label06:
        $r1[$i1] = $b4;

     label07:
        return;

     label08:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i2 = $i0 & 127;

        $i2 = $i2 | 128;

        $b4 = (byte) $i2;

     label09:
        $r1[$i1] = $b4;

     label10:
        $i0 = $i0 >>> 7;

        goto label05;

     label11:
        $r2 := @caughtexception;

        $r6 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r3 = newarray (java.lang.Object)[3];

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $i0 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[1] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r3[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r3);

        specialinvoke $r6.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r2);

        goto label12;

     label12:
        throw $r6;

        catch java.lang.IndexOutOfBoundsException from label06 to label07 with label11;
        catch java.lang.IndexOutOfBoundsException from label09 to label10 with label11;
    }

    public final void writeUInt64(int, long)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0;
        long $l1;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public final void writeUInt64NoTag(long)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r4;
        long $l0, $l2;
        java.lang.Integer $r5;
        com.google.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte $b3;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r3;
        int $i1, $i4;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $l0 := @parameter0: long;

        $z0 = staticinvoke <com.google.protobuf.CodedOutputStream: boolean access$100()>();

        if $z0 == 0 goto label03;

        $i1 = virtualinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        if $i1 < 10 goto label03;

     label01:
        $l2 = $l0 & -128L;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label02;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $l2 = (long) $i1;

        $i1 = (int) $l0;

        $b3 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l2, $b3);

        return;

     label02:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $l2 = (long) $i1;

        $i1 = (int) $l0;

        $i1 = $i1 & 127;

        $i1 = $i1 | 128;

        $b3 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l2, $b3);

        $l0 = $l0 >>> 7;

        goto label01;

     label03:
        $l2 = $l0 & -128L;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label06;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $i4 = (int) $l0;

        $b3 = (byte) $i4;

     label04:
        $r1[$i1] = $b3;

     label05:
        return;

     label06:
        $r1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i1 + 1;

        r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $i4 = (int) $l0;

        $i4 = $i4 & 127;

        $i4 = $i4 | 128;

        $b3 = (byte) $i4;

     label07:
        $r1[$i1] = $b3;

     label08:
        $l0 = $l0 >>> 7;

        goto label03;

     label09:
        $r2 := @caughtexception;

        $r3 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r4 = newarray (java.lang.Object)[3];

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[0] = $r5;

        $i1 = r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[1] = $r5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r4);

        specialinvoke $r3.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r2);

        goto label10;

     label10:
        throw $r3;

        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label09;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label09;
    }
}
