public abstract class com.google.common.collect.Maps$IteratorBasedAbstractMap extends java.util.AbstractMap
{

    public void <init>()
    {
        com.google.common.collect.Maps$IteratorBasedAbstractMap r0;

        r0 := @this: com.google.common.collect.Maps$IteratorBasedAbstractMap;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        return;
    }

    public void clear()
    {
        com.google.common.collect.Maps$IteratorBasedAbstractMap r0;
        java.util.Iterator $r1;

        r0 := @this: com.google.common.collect.Maps$IteratorBasedAbstractMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: java.util.Iterator entryIterator()>();

        staticinvoke <com.google.common.collect.Iterators: void clear(java.util.Iterator)>($r1);

        return;
    }

    public abstract java.util.Iterator entryIterator();

    public java.util.Set entrySet()
    {
        com.google.common.collect.Maps$IteratorBasedAbstractMap r0;
        com.google.common.collect.Maps$IteratorBasedAbstractMap$1 $r1;

        r0 := @this: com.google.common.collect.Maps$IteratorBasedAbstractMap;

        $r1 = new com.google.common.collect.Maps$IteratorBasedAbstractMap$1;

        specialinvoke $r1.<com.google.common.collect.Maps$IteratorBasedAbstractMap$1: void <init>(com.google.common.collect.Maps$IteratorBasedAbstractMap)>(r0);

        return $r1;
    }

    public java.util.Spliterator entrySpliterator()
    {
        java.util.Iterator $r1;
        int $i0;
        com.google.common.collect.Maps$IteratorBasedAbstractMap r0;
        long $l1;
        java.util.Spliterator $r2;

        r0 := @this: com.google.common.collect.Maps$IteratorBasedAbstractMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: java.util.Iterator entryIterator()>();

        $i0 = virtualinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: int size()>();

        $l1 = (long) $i0;

        $r2 = staticinvoke <java.util.Spliterators: java.util.Spliterator spliterator(java.util.Iterator,long,int)>($r1, $l1, 65);

        return $r2;
    }

    public void forEachEntry(java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        com.google.common.collect.Maps$IteratorBasedAbstractMap r0;
        java.util.Iterator $r2;

        r0 := @this: com.google.common.collect.Maps$IteratorBasedAbstractMap;

        $r1 := @parameter0: java.util.function.Consumer;

        $r2 = virtualinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: java.util.Iterator entryIterator()>();

        interfaceinvoke $r2.<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>($r1);

        return;
    }

    public abstract int size();
}
