public class com.google.android.datatransport.runtime.SafeLoggingExecutor extends java.lang.Object implements java.util.concurrent.Executor
{
    public final java.util.concurrent.Executor delegate;

    public void <init>(java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r1;
        com.google.android.datatransport.runtime.SafeLoggingExecutor r0;

        r0 := @this: com.google.android.datatransport.runtime.SafeLoggingExecutor;

        $r1 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.datatransport.runtime.SafeLoggingExecutor: java.util.concurrent.Executor delegate> = $r1;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        com.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable $r3;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r1;
        com.google.android.datatransport.runtime.SafeLoggingExecutor r0;

        r0 := @this: com.google.android.datatransport.runtime.SafeLoggingExecutor;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.google.android.datatransport.runtime.SafeLoggingExecutor: java.util.concurrent.Executor delegate>;

        $r3 = new com.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable;

        specialinvoke $r3.<com.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: void <init>(java.lang.Runnable)>($r1);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }
}
