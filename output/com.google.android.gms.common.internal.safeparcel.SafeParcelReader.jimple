public class com.google.android.gms.common.internal.safeparcel.SafeParcelReader extends java.lang.Object
{

    public void <init>()
    {
        com.google.android.gms.common.internal.safeparcel.SafeParcelReader r0;

        r0 := @this: com.google.android.gms.common.internal.safeparcel.SafeParcelReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.math.BigDecimal createBigDecimal(android.os.Parcel, int)
    {
        byte[] $r1;
        java.math.BigDecimal $r2;
        int $i0, $i1, $i2;
        java.math.BigInteger $r3;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i2 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: byte[] createByteArray()>();

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = $i2 + $i1;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i1);

        $r2 = new java.math.BigDecimal;

        $r3 = new java.math.BigInteger;

        specialinvoke $r3.<java.math.BigInteger: void <init>(byte[])>($r1);

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r3, $i0);

        return $r2;
    }

    public static java.math.BigDecimal[] createBigDecimalArray(android.os.Parcel, int)
    {
        byte[] $r4;
        java.math.BigDecimal[] $r0;
        android.os.Parcel $r3;
        java.math.BigDecimal $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.math.BigInteger $r2;

        $r3 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r3, $i0);

        $i1 = virtualinvoke $r3.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        $r0 = newarray (java.math.BigDecimal)[$i2];

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $r4 = virtualinvoke $r3.<android.os.Parcel: byte[] createByteArray()>();

        $i4 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        $r1 = new java.math.BigDecimal;

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(byte[])>($r4);

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r2, $i4);

        $r0[$i3] = $r1;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r3.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static java.math.BigInteger createBigInteger(android.os.Parcel, int)
    {
        byte[] $r1;
        int $i0, $i1;
        java.math.BigInteger $r2;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: byte[] createByteArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(byte[])>($r1);

        return $r2;
    }

    public static java.math.BigInteger[] createBigIntegerArray(android.os.Parcel, int)
    {
        byte[] $r3;
        java.math.BigInteger[] $r0;
        android.os.Parcel $r2;
        int $i0, $i1, $i2, $i3;
        java.math.BigInteger $r1;

        $r2 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r2, $i0);

        $i1 = virtualinvoke $r2.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        $r0 = newarray (java.math.BigInteger)[$i2];

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $r1 = new java.math.BigInteger;

        $r3 = virtualinvoke $r2.<android.os.Parcel: byte[] createByteArray()>();

        specialinvoke $r1.<java.math.BigInteger: void <init>(byte[])>($r3);

        $r0[$i3] = $r1;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static boolean[] createBooleanArray(android.os.Parcel, int)
    {
        int $i0, $i1;
        boolean[] $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: boolean[] createBooleanArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.util.ArrayList createBooleanList(android.os.Parcel, int)
    {
        android.os.Parcel $r1;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Boolean $r2;
        boolean $z0;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label5;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        goto label2;

     label5:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static android.os.Bundle createBundle(android.os.Parcel, int)
    {
        android.os.Bundle $r1;
        int $i0, $i1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: android.os.Bundle readBundle()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static byte[] createByteArray(android.os.Parcel, int)
    {
        byte[] $r1;
        int $i0, $i1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: byte[] createByteArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static byte[][] createByteArrayArray(android.os.Parcel, int)
    {
        byte[] $r2;
        byte[][] $r0;
        int $i0, $i1, $i2, $i3;
        android.os.Parcel $r1;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0 = newarray (byte[])[$i2];

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $r2 = virtualinvoke $r1.<android.os.Parcel: byte[] createByteArray()>();

        $r0[$i3] = $r2;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static android.util.SparseArray createByteArraySparseArray(android.os.Parcel, int)
    {
        byte[] $r2;
        android.os.Parcel $r1;
        android.util.SparseArray $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>(int)>($i2);

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke $r1.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke $r0.<android.util.SparseArray: void append(int,java.lang.Object)>($i4, $r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static char[] createCharArray(android.os.Parcel, int)
    {
        int $i0, $i1;
        char[] $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: char[] createCharArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static double[] createDoubleArray(android.os.Parcel, int)
    {
        int $i0, $i1;
        double[] $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: double[] createDoubleArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.util.ArrayList createDoubleList(android.os.Parcel, int)
    {
        java.lang.Double $r2;
        android.os.Parcel $r1;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3;
        double $d0;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $d0 = virtualinvoke $r1.<android.os.Parcel: double readDouble()>();

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static android.util.SparseArray createDoubleSparseArray(android.os.Parcel, int)
    {
        java.lang.Double $r2;
        android.os.Parcel $r1;
        android.util.SparseArray $r0;
        int $i0, $i1, $i2, $i3, $i4;
        double $d0;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $d0 = virtualinvoke $r1.<android.os.Parcel: double readDouble()>();

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r0.<android.util.SparseArray: void append(int,java.lang.Object)>($i4, $r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static float[] createFloatArray(android.os.Parcel, int)
    {
        int $i0, $i1;
        float[] $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: float[] createFloatArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.util.ArrayList createFloatList(android.os.Parcel, int)
    {
        java.lang.Float $r2;
        android.os.Parcel $r1;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3;
        float $f0;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $f0 = virtualinvoke $r1.<android.os.Parcel: float readFloat()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static android.util.SparseArray createFloatSparseArray(android.os.Parcel, int)
    {
        java.lang.Float $r2;
        android.os.Parcel $r1;
        android.util.SparseArray $r0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $f0 = virtualinvoke $r1.<android.os.Parcel: float readFloat()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r0.<android.util.SparseArray: void append(int,java.lang.Object)>($i4, $r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static android.os.IBinder[] createIBinderArray(android.os.Parcel, int)
    {
        int $i0, $i1;
        android.os.IBinder[] $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: android.os.IBinder[] createBinderArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.util.ArrayList createIBinderList(android.os.Parcel, int)
    {
        int $i0, $i1;
        android.os.Parcel $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: java.util.ArrayList createBinderArrayList()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static android.util.SparseArray createIBinderSparseArray(android.os.Parcel, int)
    {
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        android.util.SparseArray $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>(int)>($i2);

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke $r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke $r0.<android.util.SparseArray: void append(int,java.lang.Object)>($i4, $r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static int[] createIntArray(android.os.Parcel, int)
    {
        int[] $r1;
        int $i0, $i1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: int[] createIntArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.util.ArrayList createIntegerList(android.os.Parcel, int)
    {
        java.lang.Integer $r2;
        android.os.Parcel $r1;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static long[] createLongArray(android.os.Parcel, int)
    {
        long[] $r1;
        int $i0, $i1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: long[] createLongArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.util.ArrayList createLongList(android.os.Parcel, int)
    {
        long $l4;
        android.os.Parcel $r1;
        java.util.ArrayList $r0;
        java.lang.Long $r2;
        int $i0, $i1, $i2, $i3;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $l4 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static android.os.Parcel createParcel(android.os.Parcel, int)
    {
        int $i0, $i1;
        android.os.Parcel $r0, $r1;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r0, $i1, $i0);

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static android.os.Parcel[] createParcelArray(android.os.Parcel, int)
    {
        android.os.Parcel $r0, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.os.Parcel[] $r1;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r1 = newarray (android.os.Parcel)[$i2];

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label5;

        $i4 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label3;

        $i5 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r0, $i5, $i4);

        $r1[$i3] = $r2;

        $i4 = $i5 + $i4;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i4);

        goto label4;

     label3:
        $r1[$i3] = null;

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.util.ArrayList createParcelList(android.os.Parcel, int)
    {
        android.os.Parcel $r0, $r2;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label5;

        $i4 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label3;

        $i5 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r0, $i5, $i4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i4 = $i5 + $i4;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i4);

        goto label4;

     label3:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static android.util.SparseArray createParcelSparseArray(android.os.Parcel, int)
    {
        android.os.Parcel $r0, $r2;
        android.util.SparseArray $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label5;

        $i4 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label3;

        $i6 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r0, $i6, $i5);

        virtualinvoke $r1.<android.util.SparseArray: void append(int,java.lang.Object)>($i4, $r2);

        $i4 = $i6 + $i5;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i4);

        goto label4;

     label3:
        virtualinvoke $r1.<android.util.SparseArray: void append(int,java.lang.Object)>($i4, null);

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static android.os.Parcelable createParcelable(android.os.Parcel, int, android.os.Parcelable$Creator)
    {
        android.os.Parcelable $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        android.os.Parcelable$Creator $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Parcelable$Creator;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r0);

        $r3 = (android.os.Parcelable) $r2;

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r3;
    }

    public static android.util.SparseBooleanArray createSparseBooleanArray(android.os.Parcel, int)
    {
        android.util.SparseBooleanArray $r1;
        int $i0, $i1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static android.util.SparseIntArray createSparseIntArray(android.os.Parcel, int)
    {
        android.util.SparseIntArray $r0;
        android.os.Parcel $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new android.util.SparseIntArray;

        specialinvoke $r0.<android.util.SparseIntArray: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        virtualinvoke $r0.<android.util.SparseIntArray: void append(int,int)>($i4, $i5);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static android.util.SparseLongArray createSparseLongArray(android.os.Parcel, int)
    {
        long $l5;
        android.util.SparseLongArray $r0;
        android.os.Parcel $r1;
        int $i0, $i1, $i2, $i3, $i4;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new android.util.SparseLongArray;

        specialinvoke $r0.<android.util.SparseLongArray: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $l5 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        virtualinvoke $r0.<android.util.SparseLongArray: void append(int,long)>($i4, $l5);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static java.lang.String createString(android.os.Parcel, int)
    {
        int $i0, $i1;
        java.lang.String $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.lang.String[] createStringArray(android.os.Parcel, int)
    {
        int $i0, $i1;
        java.lang.String[] $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: java.lang.String[] createStringArray()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static java.util.ArrayList createStringList(android.os.Parcel, int)
    {
        int $i0, $i1;
        android.os.Parcel $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static android.util.SparseArray createStringSparseArray(android.os.Parcel, int)
    {
        android.os.Parcel $r1;
        android.util.SparseArray $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r1, $i0);

        $i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        $i2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $i4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r0.<android.util.SparseArray: void append(int,java.lang.Object)>($i4, $r2);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r0;
    }

    public static java.lang.Object[] createTypedArray(android.os.Parcel, int, android.os.Parcelable$Creator)
    {
        java.lang.Object[] $r2;
        int $i0, $i1;
        android.os.Parcelable$Creator $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Parcelable$Creator;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r1);

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r2;
    }

    public static java.util.ArrayList createTypedList(android.os.Parcel, int, android.os.Parcelable$Creator)
    {
        int $i0, $i1;
        android.os.Parcelable$Creator $r1;
        android.os.Parcel $r0;
        java.util.ArrayList $r2;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Parcelable$Creator;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r1);

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r2;
    }

    public static android.util.SparseArray createTypedSparseArray(android.os.Parcel, int, android.os.Parcelable$Creator)
    {
        android.os.Parcelable$Creator $r1;
        android.os.Parcel $r0;
        android.util.SparseArray $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Parcelable$Creator;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label5;

        $i4 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label3;

        $r3 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r0);

        goto label4;

     label3:
        $r3 = null;

     label4:
        virtualinvoke $r2.<android.util.SparseArray: void append(int,java.lang.Object)>($i4, $r3);

        $i3 = $i3 + 1;

        goto label2;

     label5:
        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r2;
    }

    public static void ensureAtEnd(android.os.Parcel, int)
    {
        com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r2 = new com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(37);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Overread allowed size end=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException: void <init>(java.lang.String,android.os.Parcel)>($r3, $r0);

        throw $r2;
    }

    public static int getFieldId(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = 65535;

        $i0 = $i0 & $i1;

        return $i0;
    }

    public static boolean readBoolean(android.os.Parcel, int)
    {
        int $i0;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>($r0, $i0, 4);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.Boolean readBooleanObject(android.os.Parcel, int)
    {
        int $i0, $i1;
        java.lang.Boolean $r1;
        android.os.Parcel $r0;
        boolean $z0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        if $i1 != 0 goto label1;

        return null;

     label1:
        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int,int)>($r0, $i0, $i1, 4);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r1;
    }

    public static byte readByte(android.os.Parcel, int)
    {
        int $i0;
        byte $b1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>($r0, $i0, 4);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $b1 = (byte) $i0;

        return $b1;
    }

    public static char readChar(android.os.Parcel, int)
    {
        int $i0;
        char $c1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>($r0, $i0, 4);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $c1 = (char) $i0;

        return $c1;
    }

    public static double readDouble(android.os.Parcel, int)
    {
        int $i0;
        android.os.Parcel $r0;
        double $d0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>($r0, $i0, 8);

        $d0 = virtualinvoke $r0.<android.os.Parcel: double readDouble()>();

        return $d0;
    }

    public static java.lang.Double readDoubleObject(android.os.Parcel, int)
    {
        java.lang.Double $r1;
        int $i0, $i1;
        android.os.Parcel $r0;
        double $d0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        if $i1 != 0 goto label1;

        return null;

     label1:
        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int,int)>($r0, $i0, $i1, 8);

        $d0 = virtualinvoke $r0.<android.os.Parcel: double readDouble()>();

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r1;
    }

    public static float readFloat(android.os.Parcel, int)
    {
        int $i0;
        float $f0;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>($r0, $i0, 4);

        $f0 = virtualinvoke $r0.<android.os.Parcel: float readFloat()>();

        return $f0;
    }

    public static java.lang.Float readFloatObject(android.os.Parcel, int)
    {
        java.lang.Float $r1;
        int $i0, $i1;
        float $f0;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        if $i1 != 0 goto label1;

        return null;

     label1:
        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int,int)>($r0, $i0, $i1, 4);

        $f0 = virtualinvoke $r0.<android.os.Parcel: float readFloat()>();

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r1;
    }

    public static int readHeader(android.os.Parcel)
    {
        int $i0;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        return $i0;
    }

    public static android.os.IBinder readIBinder(android.os.Parcel, int)
    {
        int $i0, $i1;
        android.os.Parcel $r0;
        android.os.IBinder $r1;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return $r1;
    }

    public static int readInt(android.os.Parcel, int)
    {
        int $i0;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>($r0, $i0, 4);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        return $i0;
    }

    public static java.lang.Integer readIntegerObject(android.os.Parcel, int)
    {
        int $i0, $i1;
        java.lang.Integer $r1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        if $i1 != 0 goto label1;

        return null;

     label1:
        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int,int)>($r0, $i0, $i1, 4);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public static void readList(android.os.Parcel, int, java.util.List, java.lang.ClassLoader)
    {
        java.util.List $r1;
        int $i0, $i1;
        java.lang.ClassLoader $r2;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.util.List;

        $r2 := @parameter3: java.lang.ClassLoader;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        virtualinvoke $r0.<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>($r1, $r2);

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return;
    }

    public static long readLong(android.os.Parcel, int)
    {
        int $i0;
        long $l1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>($r0, $i0, 8);

        $l1 = virtualinvoke $r0.<android.os.Parcel: long readLong()>();

        return $l1;
    }

    public static java.lang.Long readLongObject(android.os.Parcel, int)
    {
        java.lang.Long $r1;
        int $i0, $i1;
        long $l2;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        if $i1 != 0 goto label1;

        return null;

     label1:
        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int,int)>($r0, $i0, $i1, 8);

        $l2 = virtualinvoke $r0.<android.os.Parcel: long readLong()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        return $r1;
    }

    public static short readShort(android.os.Parcel, int)
    {
        int $i0;
        short $s1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>($r0, $i0, 4);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $s1 = (short) $i0;

        return $s1;
    }

    public static int readSize(android.os.Parcel, int)
    {
        int $i0, $i1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i1 := @parameter1: int;

        $i0 = $i1 & -65536;

        if $i0 == -65536 goto label1;

        $i1 = $i1 >> 16;

        $i0 = 65535;

        $i1 = $i1 & $i0;

        return $i1;

     label1:
        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        return $i1;
    }

    public static void skipUnknownField(android.os.Parcel, int)
    {
        int $i0, $i1;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return;
    }

    public static int validateObjectHeader(android.os.Parcel)
    {
        com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException $r1;
        android.os.Parcel $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r3;

        $r0 := @parameter0: android.os.Parcel;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readHeader(android.os.Parcel)>($r0);

        $i1 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        $i2 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        $i3 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int getFieldId(int)>($i0);

        if $i3 == 20293 goto label3;

        $r1 = new com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException;

        $r2 = "Expected object header. Got 0x";

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 == 0 goto label1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>($r3);

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>("Expected object header. Got 0x");

     label2:
        specialinvoke $r1.<com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException: void <init>(java.lang.String,android.os.Parcel)>($r2, $r0);

        throw $r1;

     label3:
        $i0 = $i1 + $i2;

        if $i0 < $i2 goto label4;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataSize()>();

        if $i0 > $i1 goto label4;

        return $i0;

     label4:
        $r1 = new com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(54);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size read is invalid start=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException: void <init>(java.lang.String,android.os.Parcel)>($r2, $r0);

        throw $r1;
    }

    public static void zza(android.os.Parcel, int, int)
    {
        com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException $r1;
        android.os.Parcel $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>($r0, $i0);

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = new com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i2 = $i2 + 46;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected size ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException: void <init>(java.lang.String,android.os.Parcel)>($r3, $r0);

        throw $r1;
    }

    public static void zza(android.os.Parcel, int, int, int)
    {
        com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException $r2;
        android.os.Parcel $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r4;

        $r0 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i1 != $i2 goto label1;

        return;

     label1:
        $r2 = new com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + 46;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected size ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException: void <init>(java.lang.String,android.os.Parcel)>($r3, $r0);

        throw $r2;
    }
}
