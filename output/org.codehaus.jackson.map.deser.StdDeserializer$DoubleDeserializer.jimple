public final class org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer extends org.codehaus.jackson.map.deser.StdDeserializer$PrimitiveOrWrapperDeserializer
{

    public void <init>(java.lang.Class, java.lang.Double)
    {
        org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer r0;
        java.lang.Class $r1;
        java.lang.Double $r2;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.Double;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$PrimitiveOrWrapperDeserializer: void <init>(java.lang.Class,java.lang.Object)>($r1, $r2);

        return;
    }

    public java.lang.Double deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        java.lang.Double $r2;
        org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Double _parseDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        java.lang.Double $r2;
        org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: java.lang.Double deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }

    public java.lang.Double deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.TypeDeserializer $r2;
        java.lang.Double $r3;
        org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer;

        $r4 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Double _parseDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r4, $r1);

        return $r3;
    }

    public volatile java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.TypeDeserializer $r2;
        java.lang.Double $r3;
        org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer;

        $r4 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: java.lang.Double deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>($r4, $r1, $r2);

        return $r3;
    }
}
