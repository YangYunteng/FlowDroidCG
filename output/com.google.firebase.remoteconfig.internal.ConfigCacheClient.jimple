public class com.google.firebase.remoteconfig.internal.ConfigCacheClient extends java.lang.Object
{
    public static final java.util.concurrent.Executor DIRECT_EXECUTOR;
    public static final long DISK_READ_TIMEOUT_IN_SECONDS;
    public static final java.util.Map clientInstances;
    public com.google.android.gms.tasks.Task cachedContainerTask;
    public final java.util.concurrent.ExecutorService executorService;
    public final com.google.firebase.remoteconfig.internal.ConfigStorageClient storageClient;

    static void <clinit>()
    {
        java.util.HashMap $r1;
        java.util.concurrent.Executor $r0;

        <com.google.firebase.remoteconfig.internal.ConfigCacheClient: long DISK_READ_TIMEOUT_IN_SECONDS> = 5L;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.Map clientInstances> = $r1;

        $r0 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigCacheClient$$Lambda$4: java.util.concurrent.Executor lambdaFactory$()>();

        <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.concurrent.Executor DIRECT_EXECUTOR> = $r0;

        return;
    }

    public void <init>(java.util.concurrent.ExecutorService, com.google.firebase.remoteconfig.internal.ConfigStorageClient)
    {
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        java.util.concurrent.ExecutorService $r2;
        com.google.firebase.remoteconfig.internal.ConfigStorageClient $r1;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r2 := @parameter0: java.util.concurrent.ExecutorService;

        $r1 := @parameter1: com.google.firebase.remoteconfig.internal.ConfigStorageClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.concurrent.ExecutorService executorService> = $r2;

        r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.firebase.remoteconfig.internal.ConfigStorageClient storageClient> = $r1;

        r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask> = null;

        return;
    }

    public static java.lang.Object await(com.google.android.gms.tasks.Task, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.Executor $r3;
        java.util.concurrent.TimeoutException $r7;
        long $l0;
        com.google.android.gms.tasks.Task $r2;
        java.lang.Exception $r6;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient$AwaitListener $r1;
        java.util.concurrent.TimeUnit $r0;
        java.util.concurrent.ExecutionException $r5;
        java.lang.Object $r4;
        boolean $z0;

        $r2 := @parameter0: com.google.android.gms.tasks.Task;

        $l0 := @parameter1: long;

        $r0 := @parameter2: java.util.concurrent.TimeUnit;

        $r1 = new com.google.firebase.remoteconfig.internal.ConfigCacheClient$AwaitListener;

        specialinvoke $r1.<com.google.firebase.remoteconfig.internal.ConfigCacheClient$AwaitListener: void <init>(com.google.firebase.remoteconfig.internal.ConfigCacheClient$1)>(null);

        $r3 = <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        virtualinvoke $r2.<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)>($r3, $r1);

        $r3 = <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        virtualinvoke $r2.<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)>($r3, $r1);

        $r3 = <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        virtualinvoke $r2.<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)>($r3, $r1);

        $z0 = virtualinvoke $r1.<com.google.firebase.remoteconfig.internal.ConfigCacheClient$AwaitListener: boolean await(long,java.util.concurrent.TimeUnit)>($l0, $r0);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r2.<com.google.android.gms.tasks.Task: boolean isSuccessful()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r2.<com.google.android.gms.tasks.Task: java.lang.Object getResult()>();

        return $r4;

     label1:
        $r5 = new java.util.concurrent.ExecutionException;

        $r6 = virtualinvoke $r2.<com.google.android.gms.tasks.Task: java.lang.Exception getException()>();

        specialinvoke $r5.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r6);

        throw $r5;

     label2:
        $r7 = new java.util.concurrent.TimeoutException;

        specialinvoke $r7.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>("Task await timed out.");

        throw $r7;
    }

    public static void clearInstancesForTest()
    {
        java.lang.Throwable $r1;
        java.util.Map $r0;

        entermonitor class "Lcom/google/firebase/remoteconfig/internal/ConfigCacheClient;";

     label1:
        $r0 = <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.Map clientInstances>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

     label2:
        exitmonitor class "Lcom/google/firebase/remoteconfig/internal/ConfigCacheClient;";

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/google/firebase/remoteconfig/internal/ConfigCacheClient;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static com.google.firebase.remoteconfig.internal.ConfigCacheClient getInstance(java.util.concurrent.ExecutorService, com.google.firebase.remoteconfig.internal.ConfigStorageClient)
    {
        java.lang.Throwable $r6;
        com.google.firebase.remoteconfig.internal.ConfigStorageClient $r0;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String $r3;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r1;
        java.util.concurrent.ExecutorService $r2;
        boolean $z0;

        $r2 := @parameter0: java.util.concurrent.ExecutorService;

        $r0 := @parameter1: com.google.firebase.remoteconfig.internal.ConfigStorageClient;

        entermonitor class "Lcom/google/firebase/remoteconfig/internal/ConfigCacheClient;";

     label1:
        $r3 = virtualinvoke $r0.<com.google.firebase.remoteconfig.internal.ConfigStorageClient: java.lang.String getFileName()>();

        $r4 = <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.Map clientInstances>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r4 = <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.Map clientInstances>;

        $r1 = new com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        specialinvoke $r1.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: void <init>(java.util.concurrent.ExecutorService,com.google.firebase.remoteconfig.internal.ConfigStorageClient)>($r2, $r0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

     label2:
        $r4 = <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.Map clientInstances>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = (com.google.firebase.remoteconfig.internal.ConfigCacheClient) $r5;

     label3:
        exitmonitor class "Lcom/google/firebase/remoteconfig/internal/ConfigCacheClient;";

        return $r1;

     label4:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/google/firebase/remoteconfig/internal/ConfigCacheClient;";

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static java.lang.Void lambda$put$0(com.google.firebase.remoteconfig.internal.ConfigCacheClient, com.google.firebase.remoteconfig.internal.ConfigContainer)
    {
        java.lang.Void $r1;
        com.google.firebase.remoteconfig.internal.ConfigStorageClient $r3;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;

        $r2 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r0 := @parameter1: com.google.firebase.remoteconfig.internal.ConfigContainer;

        $r3 = $r2.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.firebase.remoteconfig.internal.ConfigStorageClient storageClient>;

        $r1 = virtualinvoke $r3.<com.google.firebase.remoteconfig.internal.ConfigStorageClient: java.lang.Void write(com.google.firebase.remoteconfig.internal.ConfigContainer)>($r0);

        return $r1;
    }

    public static com.google.android.gms.tasks.Task lambda$put$1(com.google.firebase.remoteconfig.internal.ConfigCacheClient, boolean, com.google.firebase.remoteconfig.internal.ConfigContainer, java.lang.Void)
    {
        java.lang.Void $r1;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r0;
        com.google.android.gms.tasks.Task $r2;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r3;
        boolean $z0;

        $r3 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $z0 := @parameter1: boolean;

        $r0 := @parameter2: com.google.firebase.remoteconfig.internal.ConfigContainer;

        $r1 := @parameter3: java.lang.Void;

        if $z0 == 0 goto label1;

        specialinvoke $r3.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: void updateInMemoryConfigContainer(com.google.firebase.remoteconfig.internal.ConfigContainer)>($r0);

     label1:
        $r2 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)>($r0);

        return $r2;
    }

    private void updateInMemoryConfigContainer(com.google.firebase.remoteconfig.internal.ConfigContainer)
    {
        java.lang.Throwable $r3;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.android.gms.tasks.Task $r1;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r2;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r2 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigContainer;

        entermonitor r0;

     label1:
        $r1 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)>($r2);

        r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask> = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clear()
    {
        java.lang.Throwable $r3;
        com.google.firebase.remoteconfig.internal.ConfigStorageClient $r2;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.android.gms.tasks.Task $r1;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        entermonitor r0;

     label1:
        $r1 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)>(null);

        r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask> = $r1;

        exitmonitor r0;

     label2:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.firebase.remoteconfig.internal.ConfigStorageClient storageClient>;

        virtualinvoke $r2.<com.google.firebase.remoteconfig.internal.ConfigStorageClient: java.lang.Void clear()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.google.android.gms.tasks.Task get()
    {
        java.lang.Throwable $r5;
        com.google.firebase.remoteconfig.internal.ConfigStorageClient $r3;
        java.util.concurrent.Callable $r4;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.android.gms.tasks.Task $r1;
        java.util.concurrent.ExecutorService $r2;
        boolean $z0;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        entermonitor r0;

     label1:
        $r1 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask>;

        if $r1 == null goto label2;

        $r1 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask>;

        $z0 = virtualinvoke $r1.<com.google.android.gms.tasks.Task: boolean isComplete()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask>;

        $z0 = virtualinvoke $r1.<com.google.android.gms.tasks.Task: boolean isSuccessful()>();

        if $z0 != 0 goto label3;

     label2:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.concurrent.ExecutorService executorService>;

        $r3 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.firebase.remoteconfig.internal.ConfigStorageClient storageClient>;

        virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigCacheClient$$Lambda$3: java.util.concurrent.Callable lambdaFactory$(com.google.firebase.remoteconfig.internal.ConfigStorageClient)>($r3);

        $r1 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r2, $r4);

        r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask> = $r1;

     label3:
        $r1 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask>;

     label4:
        exitmonitor r0;

        return $r1;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public com.google.firebase.remoteconfig.internal.ConfigContainer getBlocking()
    {
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r1;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r1 = virtualinvoke r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.firebase.remoteconfig.internal.ConfigContainer getBlocking(long)>(5L);

        return $r1;
    }

    public com.google.firebase.remoteconfig.internal.ConfigContainer getBlocking(long)
    {
        java.lang.Throwable $r6;
        long $l0;
        com.google.android.gms.tasks.Task $r2;
        java.lang.Exception $r5;
        java.util.concurrent.TimeUnit $r1;
        java.lang.Object $r3;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r4;
        boolean $z0;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $l0 := @parameter0: long;

        entermonitor r0;

     label01:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask>;

        if $r2 == null goto label03;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask>;

        $z0 = virtualinvoke $r2.<com.google.android.gms.tasks.Task: boolean isSuccessful()>();

        if $z0 == 0 goto label03;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.tasks.Task: java.lang.Object getResult()>();

        $r4 = (com.google.firebase.remoteconfig.internal.ConfigContainer) $r3;

        exitmonitor r0;

     label02:
        return $r4;

     label03:
        exitmonitor r0;

     label04:
        $r2 = virtualinvoke r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task get()>();

     label05:
        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label06:
        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.lang.Object await(com.google.android.gms.tasks.Task,long,java.util.concurrent.TimeUnit)>($r2, $l0, $r1);

     label07:
        $r4 = (com.google.firebase.remoteconfig.internal.ConfigContainer) $r3;

        return $r4;

     label08:
        $r5 := @caughtexception;

        goto label11;

     label09:
        $r5 := @caughtexception;

        goto label11;

     label10:
        $r5 := @caughtexception;

     label11:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("FirebaseRemoteConfig", "Reading from storage file failed.", $r5);

        return null;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.InterruptedException from label04 to label05 with label10;
        catch java.lang.InterruptedException from label06 to label07 with label10;
        catch java.util.concurrent.ExecutionException from label04 to label05 with label09;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label09;
        catch java.util.concurrent.TimeoutException from label04 to label05 with label08;
        catch java.util.concurrent.TimeoutException from label06 to label07 with label08;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public com.google.android.gms.tasks.Task getCachedContainerTask()
    {
        java.lang.Throwable $r1;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.android.gms.tasks.Task r2;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        entermonitor r0;

     label1:
        r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task cachedContainerTask>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.google.android.gms.tasks.Task put(com.google.firebase.remoteconfig.internal.ConfigContainer)
    {
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.android.gms.tasks.Task $r1;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r2;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r2 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigContainer;

        $r1 = virtualinvoke r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task put(com.google.firebase.remoteconfig.internal.ConfigContainer,boolean)>($r2, 1);

        return $r1;
    }

    public com.google.android.gms.tasks.Task put(com.google.firebase.remoteconfig.internal.ConfigContainer, boolean)
    {
        com.google.android.gms.tasks.SuccessContinuation $r5;
        java.util.concurrent.Callable $r3;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r1;
        java.util.concurrent.ExecutorService $r2;
        com.google.android.gms.tasks.Task $r4;
        boolean $z0;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r1 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigContainer;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.concurrent.ExecutorService executorService>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigCacheClient$$Lambda$1: java.util.concurrent.Callable lambdaFactory$(com.google.firebase.remoteconfig.internal.ConfigCacheClient,com.google.firebase.remoteconfig.internal.ConfigContainer)>(r0, $r1);

        $r4 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r2, $r3);

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: java.util.concurrent.ExecutorService executorService>;

        $r5 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigCacheClient$$Lambda$2: com.google.android.gms.tasks.SuccessContinuation lambdaFactory$(com.google.firebase.remoteconfig.internal.ConfigCacheClient,boolean,com.google.firebase.remoteconfig.internal.ConfigContainer)>(r0, $z0, $r1);

        $r4 = virtualinvoke $r4.<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)>($r2, $r5);

        return $r4;
    }

    public com.google.android.gms.tasks.Task putWithoutWaitingForDiskWrite(com.google.firebase.remoteconfig.internal.ConfigContainer)
    {
        com.google.firebase.remoteconfig.internal.ConfigCacheClient r0;
        com.google.android.gms.tasks.Task $r1;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r2;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r2 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigContainer;

        specialinvoke r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: void updateInMemoryConfigContainer(com.google.firebase.remoteconfig.internal.ConfigContainer)>($r2);

        $r1 = virtualinvoke r0.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.android.gms.tasks.Task put(com.google.firebase.remoteconfig.internal.ConfigContainer,boolean)>($r2, 0);

        return $r1;
    }
}
