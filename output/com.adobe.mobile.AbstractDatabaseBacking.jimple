public abstract class com.adobe.mobile.AbstractDatabaseBacking extends java.lang.Object
{
    public android.database.sqlite.SQLiteDatabase a;
    public java.io.File b;
    public com.adobe.mobile.AbstractDatabaseBacking$a c;
    public final java.lang.Object d;
    public java.lang.String e;
    public java.lang.String f;

    public void <init>()
    {
        com.adobe.mobile.AbstractDatabaseBacking r0;
        java.lang.Object $r1;

        r0 := @this: com.adobe.mobile.AbstractDatabaseBacking;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.adobe.mobile.AbstractDatabaseBacking: java.io.File b> = null;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.Object d> = $r1;

        return;
    }

    public void a()
    {
        com.adobe.mobile.AbstractDatabaseBacking r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: com.adobe.mobile.AbstractDatabaseBacking;

        $r1 = r0.<com.adobe.mobile.AbstractDatabaseBacking: android.database.sqlite.SQLiteDatabase a>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label1:
        return;
    }

    public void a(java.io.File)
    {
        java.lang.Throwable $r4;
        com.adobe.mobile.AbstractDatabaseBacking r0;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.Object $r2;
        java.io.File $r1;

        r0 := @this: com.adobe.mobile.AbstractDatabaseBacking;

        $r1 := @parameter0: java.io.File;

        r0.<com.adobe.mobile.AbstractDatabaseBacking: java.io.File b> = $r1;

        $r2 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.Object d>;

        entermonitor $r2;

     label1:
        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void f()>();

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void c()>();

        $r3 = r0.<com.adobe.mobile.AbstractDatabaseBacking: android.database.sqlite.SQLiteDatabase a>;

        if $r3 == null goto label2;

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void d()>();

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void b()>();

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void g()>();

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void a(java.lang.Exception)
    {
        java.lang.Throwable $r7;
        com.adobe.mobile.AbstractDatabaseBacking r0;
        java.lang.Object[] $r2;
        java.lang.Exception $r1;
        java.io.File $r5;
        java.lang.Object $r4;
        java.lang.String $r3;
        com.adobe.mobile.AbstractDatabaseBacking$a $r6;
        boolean $z0;

        r0 := @this: com.adobe.mobile.AbstractDatabaseBacking;

        $r1 := @parameter0: java.lang.Exception;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r2[0] = $r3;

        $r3 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r2[1] = $r3;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Database in unrecoverable state (%s), resetting.", $r2);

        $r4 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.Object d>;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.io.File b>;

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.io.File b>;

        $z0 = virtualinvoke $r5.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label3;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r2[0] = $r3;

        $r5 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.io.File b>;

        $r3 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2[1] = $r3;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Failed to delete database file(%s).", $r2);

        $r6 = <com.adobe.mobile.AbstractDatabaseBacking$a: com.adobe.mobile.AbstractDatabaseBacking$a b>;

        r0.<com.adobe.mobile.AbstractDatabaseBacking: com.adobe.mobile.AbstractDatabaseBacking$a c> = $r6;

        exitmonitor $r4;

     label2:
        return;

     label3:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r2[0] = $r3;

        $r5 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.io.File b>;

        $r3 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2[1] = $r3;

        staticinvoke <com.adobe.mobile.StaticMethods: void a(java.lang.String,java.lang.Object[])>("%s - Database file(%s) was corrupt and had to be deleted.", $r2);

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void c()>();

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void b()>();

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void g()>();

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void e()>();

        exitmonitor $r4;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public abstract void b();

    public final void c()
    {
        com.adobe.mobile.AbstractDatabaseBacking r0;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.Object[] $r6;
        java.lang.String $r1;
        com.adobe.mobile.AbstractDatabaseBacking$a $r4;
        android.database.SQLException $r5;
        java.io.File $r2;

        r0 := @this: com.adobe.mobile.AbstractDatabaseBacking;

     label1:
        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void a()>();

     label2:
        $r2 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.io.File b>;

     label3:
        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r3 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, null, 268435472);

     label4:
        r0.<com.adobe.mobile.AbstractDatabaseBacking: android.database.sqlite.SQLiteDatabase a> = $r3;

        $r4 = <com.adobe.mobile.AbstractDatabaseBacking$a: com.adobe.mobile.AbstractDatabaseBacking$a a>;

        r0.<com.adobe.mobile.AbstractDatabaseBacking: com.adobe.mobile.AbstractDatabaseBacking$a c> = $r4;

        return;

     label5:
        $r5 := @caughtexception;

        $r4 = <com.adobe.mobile.AbstractDatabaseBacking$a: com.adobe.mobile.AbstractDatabaseBacking$a b>;

        r0.<com.adobe.mobile.AbstractDatabaseBacking: com.adobe.mobile.AbstractDatabaseBacking$a c> = $r4;

        $r6 = newarray (java.lang.Object)[2];

        $r1 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r6[0] = $r1;

        $r1 = virtualinvoke $r5.<android.database.SQLException: java.lang.String getLocalizedMessage()>();

        $r6[1] = $r1;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Unable to open database (%s).", $r6);

        return;

        catch android.database.SQLException from label1 to label2 with label5;
        catch android.database.SQLException from label3 to label4 with label5;
    }

    public void d()
    {
        com.adobe.mobile.AbstractDatabaseBacking r0;

        r0 := @this: com.adobe.mobile.AbstractDatabaseBacking;

        return;
    }

    public abstract void e();

    public void f()
    {
        com.adobe.mobile.AbstractDatabaseBacking r0;

        r0 := @this: com.adobe.mobile.AbstractDatabaseBacking;

        return;
    }

    public abstract void g();
}
